<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 환경 변수 가져오기 -->
    <springProperty scope="context" name="SERVICE_NAME" source="spring.application.name" defaultValue="springboot-service"/>
    <property name="ENVIRONMENT" value="${ENVIRONMENT:-development}"/>
    <property name="LOG_PATH" value="${LOG_PATH:-./logs}"/>

    <!-- Console Appender (JSON 형식) -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <!-- 공통 필드 추가 -->
            <customFields>
                {
                    "service":"${SERVICE_NAME}",
                    "environment":"${ENVIRONMENT}",
                    "host":"${HOSTNAME}"
                }
            </customFields>

            <!-- 필드명 커스터마이징 -->
            <fieldNames>
                <timestamp>timestamp</timestamp>
                <version>[ignore]</version>
                <levelValue>[ignore]</levelValue>
            </fieldNames>

            <!-- timestamp를 ISO 8601 UTC 형식으로 -->
            <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</timestampPattern>
            <timeZone>UTC</timeZone>

            <!-- 불필요한 필드 제거 -->
            <includeMdcKeyNames>trace_id,span_id,request_id</includeMdcKeyNames>
        </encoder>
    </appender>

    <!-- File Appender (JSON 형식) -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/app.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <customFields>
                {
                    "service":"${SERVICE_NAME}",
                    "environment":"${ENVIRONMENT}",
                    "host":"${HOSTNAME}"
                }
            </customFields>
            <fieldNames>
                <timestamp>timestamp</timestamp>
                <version>[ignore]</version>
                <levelValue>[ignore]</levelValue>
            </fieldNames>
            <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</timestampPattern>
            <timeZone>UTC</timeZone>
            <includeMdcKeyNames>trace_id,span_id,request_id</includeMdcKeyNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/app.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- Error File Appender (에러 로그만 별도 저장) -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <customFields>
                {
                    "service":"${SERVICE_NAME}",
                    "environment":"${ENVIRONMENT}",
                    "host":"${HOSTNAME}"
                }
            </customFields>
            <fieldNames>
                <timestamp>timestamp</timestamp>
                <version>[ignore]</version>
                <levelValue>[ignore]</levelValue>
            </fieldNames>
            <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</timestampPattern>
            <timeZone>UTC</timeZone>
            <includeMdcKeyNames>trace_id,span_id,request_id</includeMdcKeyNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- Root Logger -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>

    <!-- Spring Framework 로그 레벨 조정 -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="com.example" level="DEBUG"/>
</configuration>
